# Environment variables
GOPATH="/home/illegal/go"
PATH=$PATH:"/home/illegal/.local/bin"
source ~/.fzf/fzf-tab.plugin.zsh

# History settings
(fc -R &) # Load history in background
export HISTSIZE=100000 # Set maximum history size
export HISTFILE=~/.zsh_history # Set history file
export SAVEHIST=$HISTSIZE # Set maximum history size stored in history file
export HISTDUP=erase # Erase duplicates
setopt appendhistory # Append to history instead of replacing when using multiple ssh sessions
setopt sharehistory  # Share history between sessions/terminals
setopt hist_ignore_space # Prevent record in history entry if preceding them with at least one space
# setopt hist_ignore_dups # Ignore duplicate in history
setopt hist_find_no_dups # Don't find dups in history
setopt interactivecomments # Ignore lines prefixed with '#'
setopt INC_APPEND_HISTORY # Append command to history without waiting for shell to exit

# completion
autoload -Uz compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true

# fzf 
[ -d /usr/share/zsh/site-functions/fzf ] && source /usr/share/zsh/site-functions/fzf
[ -d /usr/share/fzf/shell ] && source /usr/share/fzf/shell/key-bindings.zsh

# vcs integration
# autoload -Uz vcs_info

# # git integration
# zstyle ':vcs_info:*' enable git
# zstyle ':vcs_info:git:*' check-for-changes true
# zstyle ':vcs_info:git:*' stagedstr ' %F{green}●%f'
# zstyle ':vcs_info:git:*' unstagedstr ' %F{red}✘%f'
# zstyle ':vcs_info:git:*' formats '::%s(%F{yellow}%b%f%c%u) '
# zstyle ':vcs_info:git:*' actionformats '::%s(%F{yellow}%b%f|%a%u%c) '

# precmd() { vcs_info }

# # prompt
# setopt PROMPT_SUBST
# PROMPT='%B%F{green}%n@%m %B%F{cyan}%~%b%f %B${vcs_info_msg_0_}%b%B%F{blue}%#%b%f '

# aliases
alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias zgrep='zgrep --color=auto'
alias egrep='egrep --color=auto'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias diff="colordiff"

# keybindings
bindkey -e

case "${TERM}" in
    xterm*)
        if [[ -v KONSOLE_VERSION ]]; then
            # Konsole - Default (XFree 4)
            bindkey "^[[H" beginning-of-line # Home key
            bindkey "^[[F" end-of-line # End key
            bindkey "^[[3~" delete-char # Del key
            bindkey "^[[1;5C" forward-word # control + right arrow
            bindkey "^[[1;5D" backward-word # control + left arrow
            bindkey "^H" backward-kill-word # control + backspace
            bindkey "5~" kill-word # control + delete
        else
            bindkey "^[[7~" beginning-of-line #Home key
            bindkey "^[[8~" end-of-line #End key
            bindkey "^[[3~" delete-char #Del key
            bindkey "^[Oc" forward-word # control + right arrow
            bindkey "^[Od" backward-word # control + left arrow
            bindkey "^H" backward-kill-word # control + backspace
            bindkey "^[[3^" kill-word # control + delete
        fi
    ;;

    screen|screen-*)
        if [[ -v KONSOLE_VERSION ]]; then 
            # Konsole - Default (XFree 4)
            bindkey "^[[1~" beginning-of-line #Home key
            bindkey "^[[4~" end-of-line #End key
            bindkey "^[[3~" delete-char #Del key
            bindkey "5C" forward-word # control + right arrow
            bindkey "5D" backward-word # control + left arrow
            bindkey "^H" backward-kill-word # control + backspace
            bindkey "5~" kill-word # control + delete
        else
            bindkey "^[[1~" beginning-of-line #Home key
            bindkey "^[[4~" end-of-line #End key
            bindkey "^[[3~" delete-char #Del key
            bindkey "^[Oc" forward-word # control + right arrow
            bindkey "^[OC" forward-word # control + right arrow
            bindkey "^[Od" backward-word # control + left arrow
            bindkey "^[OD" backward-word # control + left arrow
            bindkey "^H" backward-kill-word # control + backspace
            bindkey "^[[3^" kill-word # control + delete
        fi
    ;;
esac

#Initialize fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#Syntax highlights
source $HOME/.config//zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

#Initialize starship
eval "$(starship init zsh)"

# Autocomplete
if command -v rustic >/dev/null 2>&1; then
	source <(rustic completions zsh 2>/dev/null)
fi

if command -v fzf >/dev/null 2>&1; then
	source <(fzf --zsh 2>/dev/null)
fi

# Otherfiles
[ -f ~/.zshextra ] && source ~/.zshextra